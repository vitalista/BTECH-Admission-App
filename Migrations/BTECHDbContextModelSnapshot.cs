// <auto-generated />
using System;
using BTECH_APP;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BTECH_APP.Migrations
{
    [DbContext(typeof(BTECHDbContext))]
    partial class BTECHDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BTECH_APP.Entities.Admin.Dashboard.AcademicYearEntity", b =>
                {
                    b.Property<int>("AcademicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AcademicId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("AcademicId");

                    b.ToTable("Academic_Years");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Admin.InstituteEntity", b =>
                {
                    b.Property<int>("InstituteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("InstituteId"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TotalPrograms")
                        .HasColumnType("int");

                    b.HasKey("InstituteId");

                    b.ToTable("Institutes");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Admin.ProgamEntity", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InstituteId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProgramId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Admin.RequirementEntity", b =>
                {
                    b.Property<int>("RequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RequirementId"));

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsForAlsGraduate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsForFreshmen")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsForTransferee")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RequirementId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Applicant.AddressEntity", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("AddressId"));

                    b.Property<int>("AddressType")
                        .HasColumnType("int")
                        .HasColumnName("AddressTypeId");

                    b.Property<long>("ApplicantId")
                        .HasColumnType("bigint");

                    b.Property<int>("BarangayId")
                        .HasColumnType("int");

                    b.Property<int>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("AddressId");

                    b.ToTable("Applicants_Address");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Applicant.ApplicantEntity", b =>
                {
                    b.Property<int>("ApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ApplicantId"));

                    b.Property<int?>("AdmittedToProgramId")
                        .HasColumnType("int");

                    b.Property<string>("AdmittedToProgramName")
                        .HasColumnType("longtext");

                    b.Property<int>("AdmittedToSelectedProgramType")
                        .HasColumnType("int")
                        .HasColumnName("AdmittedToSelectedProgramTypeId");

                    b.Property<string>("ApplicantNo")
                        .HasColumnType("longtext");

                    b.Property<int>("ApplicantType")
                        .HasColumnType("int")
                        .HasColumnName("ApplicantTypeId");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ExamScore")
                        .HasColumnType("int");

                    b.Property<string>("FatherMobileNo")
                        .HasColumnType("longtext");

                    b.Property<string>("FatherName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Is4psMember")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsIndigenous")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSameAddress")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSoloParent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWithDisabilty")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MotherMobileNo")
                        .HasColumnType("longtext");

                    b.Property<string>("MotherName")
                        .HasColumnType("longtext");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduleDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("longtext");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ApplicantId");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Applicant.ApplicantRequirementEntity", b =>
                {
                    b.Property<int>("ApplicantRequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ApplicantRequirementId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<int>("RequirementId")
                        .HasColumnType("int");

                    b.HasKey("ApplicantRequirementId");

                    b.ToTable("Applicants_Requirements");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Applicant.PrevSchoolEntity", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SchoolId"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("EducationType")
                        .HasColumnType("int")
                        .HasColumnName("EducationTypeId");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("YearCompleted")
                        .HasColumnType("longtext");

                    b.HasKey("SchoolId");

                    b.ToTable("Applicant_PrevSchool");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Applicant.SelectedProgramEntity", b =>
                {
                    b.Property<int>("SelectedProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SelectedProgramId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedProgramType")
                        .HasColumnType("int")
                        .HasColumnName("SelectedProgramTypeId");

                    b.HasKey("SelectedProgramId");

                    b.ToTable("Applicants_Selected_Programs");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Applicant.StatusRemarksEntity", b =>
                {
                    b.Property<long>("RemarksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("RemarksId"));

                    b.Property<long>("ApplicantId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.HasKey("RemarksId");

                    b.ToTable("Applicants_Status_Remarks");
                });

            modelBuilder.Entity("BTECH_APP.Entities.Auth.UserEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDefaultPassword")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedByUserId = 1,
                            CreatedDate = new DateTime(2024, 3, 7, 12, 0, 0, 0, DateTimeKind.Utc),
                            Deleted = false,
                            DeletedByUserId = 0L,
                            Email = "admin@gmail.com",
                            IsActive = true,
                            IsDefaultPassword = false,
                            ModifiedByUserId = 0,
                            ModifiedDate = new DateTime(2024, 3, 7, 12, 0, 0, 0, DateTimeKind.Utc),
                            Password = "$2a$11$EWrMt.9Q8XXcg.8/ijSF1u1Nc51lCETgYSO/Mapx17wPvWXR6BQ2O",
                            PersonId = 1,
                            Role = 1
                        });
                });

            modelBuilder.Entity("BTECH_APP.Entities.Auth.UserInformationEntity", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CivilStatus")
                        .HasColumnType("int")
                        .HasColumnName("CivilStatusId");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("GenderTypeId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("MobileNo")
                        .HasColumnType("longtext");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameOfSpouse")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("longtext");

                    b.Property<string>("Suffix")
                        .HasColumnType("longtext");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            BirthDate = new DateTime(1999, 3, 7, 12, 0, 0, 0, DateTimeKind.Utc),
                            CivilStatus = 0,
                            CreatedByUserId = 1,
                            CreatedDate = new DateTime(2024, 3, 7, 12, 0, 0, 0, DateTimeKind.Utc),
                            Deleted = false,
                            DeletedByUserId = 0L,
                            FirstName = "Juan Ponce",
                            Gender = 0,
                            LastName = "Tech",
                            MiddleName = "Marchal",
                            MobileNo = "09673329712",
                            ModifiedByUserId = 0,
                            ModifiedDate = new DateTime(2024, 3, 7, 12, 0, 0, 0, DateTimeKind.Utc),
                            NameOfSpouse = "",
                            PlaceOfBirth = "",
                            Suffix = ""
                        });
                });

            modelBuilder.Entity("BTECH_APP.Entities.StaticData.BarangayEntity", b =>
                {
                    b.Property<int>("BarangayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BarangayId"));

                    b.Property<int>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("BarangayId");

                    b.ToTable("Barangays");
                });

            modelBuilder.Entity("BTECH_APP.Entities.StaticData.MunicipalityEntity", b =>
                {
                    b.Property<int>("MunicipalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MunicipalityId"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("MunicipalityId");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("BTECH_APP.Entities.StaticData.ProvinceEntity", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ProvinceId");

                    b.ToTable("Provinces");
                });
#pragma warning restore 612, 618
        }
    }
}

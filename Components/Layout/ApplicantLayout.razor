@inherits LayoutComponentBase
@using BTECH_APP.Components.Pages.Applicant
@using BTECH_APP.Components.Pages.Applicant.Stepper
@using BTECH_APP.Components.Pages.Auth
@using BTECH_APP.Models
@using BTECH_APP.Services.Applicant.Interfaces
@using Blazored.LocalStorage
@using MudBlazor
@using static BTECH_APP.Enums
@inject NavigationManager Navigation
@inject IAuthService _Service
@inject IApplicantService _ServiceApplicant
@inject ILocalStorageService _localStorage
@inject UserContext _userContext
@inject IDialogService DialogService

<MudThemeProvider />
<MudSnackbarProvider />
<MudDialogProvider CloseButton="true"
                   BackdropClick="false"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true" />
<MudPopoverProvider />


<MudLayout>
    <MudAppBar Elevation="1" Style="background-color:white" Fixed="true">
        <MudText Color="Color.Dark">
            <span Style="font-weight:900">Welcome! </span> <span style="color:red">@_userContext.CurrentUser.Name</span>
        </MudText>
        <MudSpacer />
        <MudMenu Icon="@Icons.Material.Filled.MoreVert"
                 Dense
                  AnchorOrigin="Origin.TopRight"
                  TransformOrigin="Origin.TopRight">
             <MudMenuItem Icon="@Icons.Material.Filled.Lock" OnClick="OpenComponentChangePassword" Label="Change Password" />
          
             <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnClick="Logout" Label="Logout" />
         </MudMenu>
     </MudAppBar>

    <MudDrawer Elevation="1" Variant="DrawerVariant.Persistent" Open="true" Class="pa-2">
        <MudDrawerHeader Style="display: flex; flex-direction: column; align-items: center; justify-content: center; padding: 16px;">
            <MudImage Src="images/logo.png"
                      Alt="Logo"
                      Height="120"
                      Width="140"
                      Class="rounded-lg"
                      Style="background: transparent; box-shadow: none;" />

            <MudText Class="mt-2"
                     Style="font-weight: 900; text-align:center;color:#546E7A">
                Dalubhasaang Politekniko ng Lungsod ng Baliwag
            </MudText>
        </MudDrawerHeader>

         <ComponentStepper CurrentStatus="@ApplicantStatus" />
  
    </MudDrawer>

    <MudMainContent>
                @Body
    </MudMainContent>
</MudLayout>

@code {
    UserAccess userAccess = new UserAccess();

    private ApplicantStatus ApplicantStatus => _userContext.CurrentUser.ApplicantStatus;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            string currentLink = new Uri(Navigation.Uri).AbsolutePath;

            var isHome = currentLink.Equals("/");

            if (!isHome && _userContext.CurrentUser.UserId == 0)
            {
                Navigation.NavigateTo("/logout", true);
                return;
            }

            var role = _userContext.CurrentUser.Role;

            if (role == RoleTypes.NotUser ||
                !(role == RoleTypes.Admin ||
                  role == RoleTypes.Verifier ||
                  role == RoleTypes.Scheduler ||
                  role == RoleTypes.Applicant))
            {
                Navigation.NavigateTo("/Not-Authorized", true);
                return;
            }

            if (!isHome && _userContext.CurrentUser.UserId != 0)
            {
                if (!userAccess.HasAccess(_userContext.CurrentUser.Role, currentLink))
                {
                    Navigation.NavigateTo("/Not-Authorized", true);
                    return;
                }
            }
            else
            {
                Navigation.NavigateTo("/loading", true);
                return;
            }
        }
    }


    private void Logout()
    {
        Navigation.NavigateTo("/logout", true);
    }

    private async Task OpenComponentChangePassword()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true };

        var dialog = await DialogService.ShowAsync<ComponentChangePassword>("Change Password", options);
        var result = await dialog.Result;

    }
}

